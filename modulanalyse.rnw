\pagebreak

\section{\Sexpr{modulname}}

Dozent: \Sexpr{dozent}

\noindent
Anzahl Rückmeldungen: \Sexpr{nrow(studiengangsdaten)}

\subsection{Fragen zum Gesamtmodul}

"Bitte beurteilen Sie die Qualität des Modulhandbuchs."

<<echo=FALSE, fig.width=7.8, fig.height=3.1>>=
suppressPackageStartupMessages(require(ggplot2))

spalten_sub <- ncol(studiengangsdaten)
mybreaks <- NULL
anzahl <- nrow(studiengangsdaten) 
if (anzahl<5){
  mybreaks <- seq(from=0, to=anzahl, by=1)
}else if(anzahl<20){
  mybreaks <- seq(from=0, to=anzahl, by=2)
}else if(anzahl<60){
  mybreaks <- seq(from=0, to=anzahl, by=5)
}else if(anzahl<100){
  mybreaks <- seq(from=0, to=anzahl, by=10)
}else {
  mybreaks <- seq(from=0, to=anzahl, by=20)
}

collapseString <- "\\\\ \\rule{2cm}{0.4pt}\\\\  "

 #     write.csv(head(studiengangsdaten), file = "loggerstud.csv")

long <- reshape(studiengangsdaten, dir = "long", varying = 1:3, sep="_", drop = 4:spalten_sub)

levels(long$q1) <- gsub("sehr ", "sehr\n ", c(levels(long$q1)))
long$time <- factor(long$time, levels=c("SQ001","SQ002","SQ003"),labels=c("War der Eintrag dieses Moduls im Modulhandbuch verständlich?", "War der Eintrag dieses Moduls im Modulhandbuch für Sie hilfreich?", "Waren die Literaturangaben für Ihr Studium hilfreich?"
)) 
scale4 <- c("#e6e8f1", "#e6e8f1", "#e6e8f1", "#e6e8f1", "red")

ggplot(long,aes(x=q1)) +
  scale_x_discrete(drop=FALSE) +
  scale_y_continuous(breaks=mybreaks) +
  scale_fill_discrete(drop=FALSE) + 
  geom_bar(stat="count", fill="#66B2FF", colour="black") +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"), 
    axis.text.y = element_text(size=7, colour = "black"),
    axis.title=element_text(size=9)
    ) +
  ylab("Häufigkeiten je Antwort") + 
  xlab("") +
  facet_wrap( ~ time, ncol=1)

@

\noindent "Bitte beurteilen Sie die Zielsetzung des Moduls."

<<echo=FALSE, fig.width=7.8, fig.height=2.3>>=

collapseString <- "\\\\ \\rule{2cm}{0.4pt}\\\\  "


long <- reshape(studiengangsdaten, dir = "long", varying = 4:5, sep="_", drop = c(1:3, 6:spalten_sub))

levels(long$q2) <- gsub("sehr ", "sehr\n ", c(levels(long$q2)))
long$time <- factor(long$time, levels=c("SQ001","SQ002"),labels=c("Waren die Ziele des Moduls für Sie erkennbar?", "Waren die Ziele des Moduls für Sie interessant?"))

scale4 <- c("#e6e8f1", "#e6e8f1", "#e6e8f1", "#e6e8f1", "red")

ggplot(long,aes(x=q2)) +
  scale_x_discrete(drop=FALSE) +
  scale_y_continuous(breaks=mybreaks) +
  scale_fill_discrete(drop=FALSE) + 
  geom_bar(stat="count", fill="#66B2FF", colour="black") +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"), 
    axis.text.y = element_text(size=7, colour = "black"),
    axis.title=element_text(size=9)
    ) +
  ylab("Häufigkeiten je Antwort") + 
  xlab("") +
  facet_wrap( ~ time, ncol=1)

@

\noindent "Bitte beurteilen Sie den Zeitaufwand des GESAMTEN Moduls. Mein Arbeitsaufwand betrug..."

<<echo=FALSE, fig.width=5.5, fig.height=2.6>>=

ggplot(studiengangsdaten,aes(x=q3)) +
  scale_x_discrete(drop=FALSE) +
  scale_y_continuous(breaks=mybreaks) +
  scale_fill_discrete(drop=FALSE) + 
  coord_flip() +
  geom_bar(stat="count", fill="#66B2FF", colour="black") +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"), 
    axis.text.y = element_text(size=7, colour = "black"),
    axis.title=element_text(size=9)
    ) +
  ylab("Häuf. je Ant.") + 
  xlab("")
  
@

\pagebreak

\noindent "Bitte beurteilen Sie den Anspruch des Moduls mittels Zustimmung zu den folgenden Aussagen."

<<echo=FALSE, fig.width=7.8, fig.height=3.1>>=

long <- reshape(studiengangsdaten, dir = "long", varying = 7:9, sep="_", drop = c(1:6, 10:spalten_sub))

levels(long$q4) <- gsub("sehr ", "sehr\n ", c(levels(long$q4)))
long$time <- factor(long$time, levels=c("1","2","3"),labels=c("Das Modul ist anspruchsvoll.", "Die Inhalte des Moduls waren interessant.", "Das Modul hat mich überfordert."))

scale4 <- c("#e6e8f1", "#e6e8f1", "#e6e8f1", "#e6e8f1", "red")

ggplot(long,aes(x=q4)) +
  scale_x_discrete(drop=FALSE) +
  scale_y_continuous(breaks=mybreaks) +
  scale_fill_discrete(drop=FALSE) + 
  geom_bar(stat="count", fill="#66B2FF", colour="black") +
  theme(
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"), 
    axis.text.y = element_text(size=7, colour = "black"),
    axis.title=element_text(size=9)
    ) +
  ylab("Häufigkeiten je Antwort") + 
  xlab("") +
  facet_wrap( ~ time, ncol=1)

@

<<echo=FALSE, include=FALSE>>=

anzahl_veranstaltungen <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 0])
anzahl_praxis <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 1])
anzahl_statistik <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 2])
anzahl_planspiel <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 3])
anzahl_ethik <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 4])
anzahl_werkstoffkunde <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 5])
anzahl_armothetik <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 6])
anzahl_prothetikv <- length(veranstaltungsnamen$Mod_ID[veranstaltungsnamen$Studiengang ==studiengang_id & veranstaltungsnamen$Mod_ID == i & veranstaltungsnamen$Praxis == 7])

anzahl_veranstaltungen_gesamt <- anzahl_veranstaltungen + anzahl_praxis + anzahl_statistik + anzahl_planspiel + anzahl_ethik + anzahl_werkstoffkunde + anzahl_armothetik + anzahl_prothetikv

modul_veranstaltungen <- subset(veranstaltungsnamen, Studiengang == studiengang_id & Mod_ID == i)

out_sub = NULL

for (v in 1:anzahl_veranstaltungen_gesamt){
  #for (v in 1:1){
  
  ausgewertete_veranstaltungen <- modul_veranstaltungen[0:(v-1),]
  anzahl_v <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==0))  
  anzahl_p <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==1))  
  anzahl_s <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==2))  
  anzahl_pl <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==3))  
  anzahl_e <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==4))  
  anzahl_w <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==5))  
  anzahl_a <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==6))  
  anzahl_prov <- nrow(subset(ausgewertete_veranstaltungen, Praxis ==7))  
  
#  write(paste("Veranstaltungsnamen dim: ", dim(veranstaltungsnamen)), file= "logger.csv", append = TRUE) 
#  write(paste("Modulveranstaltungen dim: ", dim(modul_veranstaltungen)), file= "logger.csv", append = TRUE) 
#  write(paste("Modulveranstaltungen Praxis: ", modul_veranstaltungen$Praxis), file= "logger.csv", append = TRUE) 
  write(paste("Veranstaltungsdaten dim: ", dim(veranstaltungsdaten)), file= "logger.csv", append = TRUE) 
  write(paste("\n Studiengang: ", studiengang_id, " i: ", i, "v: ", v), file= "logger.csv", append = TRUE) 
  write(paste("ausgewertete ver: ", nrow(ausgewertete_veranstaltungen), "davon v: ", anzahl_v, "davon p: ", anzahl_p, "davon s: ", anzahl_s, "davon pl: ", anzahl_pl, "davon e: ", anzahl_e), file= "logger.csv", append=TRUE) 
  
  #    write.csv(head(studiengangsdaten), file = "logger2.csv")
  #    write.csv(head(veranstaltungsdaten), file = "logger.csv")
  
  
  if(modul_veranstaltungen$Praxis[v] == 0 | modul_veranstaltungen$Praxis[v] == 5){
    start_veranstaltung <- fragen_modul + 
      (anzahl_v*fragen_veranstaltung) +
      (anzahl_p*fragen_praxis) + 
      (anzahl_s*fragen_statistik) + 
      (anzahl_pl*fragen_planspiel) + 
      (anzahl_e*fragen_ethik) + 
      (anzahl_w*fragen_werkstoffkunde) + 
      (anzahl_a*fragen_armothetik) + 
      (anzahl_prov*fragen_prothetikv) + 
      1
    ende_veranstaltung <- start_veranstaltung + 
      fragen_veranstaltung - 1

    #write(paste("select from studdaten: start: ", start_veranstaltung, "ende: ", ende_veranstaltung), file= "logger.csv", append = TRUE) 
    veranstaltungsdaten <- studiengangsdaten[ , start_veranstaltung:ende_veranstaltung]
    #write("normale Veranstaltung", file= "logger.csv", append = TRUE) 
    #write(paste("veranstaltungsdaten: ", dim(veranstaltungsdaten)), file= "logger.csv", append = TRUE) 
    #write(names(veranstaltungsdaten)[1], file= "logger.csv", append = TRUE) 
    
# label_items_veranstaltungen
l <-1


veranstaltungsdaten[, l] <- as.numeric(veranstaltungsdaten[, l])
attributes(veranstaltungsdaten)$variable.labels[l] <- "Für die Veranstaltung entsprach die kalkulierte Selbststudienzeit der Realität."
veranstaltungsdaten[, l] <- factor(veranstaltungsdaten[, l], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l] <- "q5_1"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+1] <- as.numeric(veranstaltungsdaten[, l+1])
attributes(veranstaltungsdaten)$variable.labels[l+1] <- "Für die Veranstaltung entsprach die kalkulierte Präsenzstudienzeit der Realität."
veranstaltungsdaten[, l+1] <- factor(veranstaltungsdaten[, l+1], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+1] <- "q5_2"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+2] <- as.numeric(veranstaltungsdaten[, l+2])
attributes(veranstaltungsdaten)$variable.labels[l+2] <- "Die Veranstaltung war gut strukturiert."
veranstaltungsdaten[, l+2] <- factor(veranstaltungsdaten[, l+2], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+2] <- "q5_3"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+3] <- as.numeric(veranstaltungsdaten[, l+3])
attributes(veranstaltungsdaten)$variable.labels[l+3] <- "Die Veranstaltung wurde methodisch und didaktisch so durchgeführt, dass ich gut folgen konnte."
veranstaltungsdaten[, l+3] <- factor(veranstaltungsdaten[, l+3], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+3] <- "q5_4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+4] <- as.numeric(veranstaltungsdaten[, l+4])
attributes(veranstaltungsdaten)$variable.labels[l+4] <- "Die Veranstaltung vermittelte die Wissenschaftlichkeit des Faches angemessen."
veranstaltungsdaten[, l+4] <- factor(veranstaltungsdaten[, l+4], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+4] <- "q5_5"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+5] <- as.numeric(veranstaltungsdaten[, l+5])
attributes(veranstaltungsdaten)$variable.labels[l+5] <- "Die Inhalte der Veranstaltung kann ich praktisch umsetzen."
veranstaltungsdaten[, l+5] <- factor(veranstaltungsdaten[, l+5], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+5] <- "q5_6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+6] <- as.numeric(veranstaltungsdaten[, l+6])
attributes(veranstaltungsdaten)$variable.labels[l+6] <- "Der/die Lehrende war im Umgang mit den Studierenden freundlich."
veranstaltungsdaten[, l+6] <- factor(veranstaltungsdaten[, l+6], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+6] <- "q5_7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+7] <- as.numeric(veranstaltungsdaten[, l+7])
attributes(veranstaltungsdaten)$variable.labels[l+7] <- "Ich habe mich durch den/die Lehrende gut betreut gefühlt."
veranstaltungsdaten[, l+7] <- factor(veranstaltungsdaten[, l+7], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+7] <- "q5_8"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+8] <- as.numeric(veranstaltungsdaten[, l+8])
attributes(veranstaltungsdaten)$variable.labels[l+8] <- "Der/die Lehrende war auch außerhalb der Lehrveranstaltung für Rückfragen gut erreichbar."
veranstaltungsdaten[, l+8] <- factor(veranstaltungsdaten[, l+8], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+8] <- "q5_9"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+9] <- as.numeric(veranstaltungsdaten[, l+9])
attributes(veranstaltungsdaten)$variable.labels[l+9] <- "Der/die Lehrende hat Fragen der Studierenden schnell und verständlich beantwortet."
veranstaltungsdaten[, l+9] <- factor(veranstaltungsdaten[, l+9], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+9] <- "q5_10"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+10][is.na(veranstaltungsdaten[, l+10])] <- "A3"
veranstaltungsdaten[, l+10] <- as.character(veranstaltungsdaten[, l+10])
attributes(veranstaltungsdaten)$variable.labels[l+10] <- "Hatte die Veranstaltung für Sie einen eher theoretischen oder einen eher praktischen Bezug?"
veranstaltungsdaten[, l+10] <- factor(veranstaltungsdaten[, l+10], levels=c("A1","A2", "A3"),labels=c("Theoriebezogen", "Praxisbezogen", "keine Antwort"))
names(veranstaltungsdaten)[l+10] <- "q6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+11][is.na(veranstaltungsdaten[, l+11])] <- 3
veranstaltungsdaten[, l+11] <- as.numeric(veranstaltungsdaten[, l+11])
attributes(veranstaltungsdaten)$variable.labels[l+11] <- "War die Veranstaltung für Sie praxisrelevant?"
veranstaltungsdaten[, l+11] <- factor(veranstaltungsdaten[, l+11], levels=c(1,2,3),labels=c("Ja", "Nein", "keine Antwort"))
names(veranstaltungsdaten)[l+11] <- "q7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+12][is.na(veranstaltungsdaten[, l+12])] <- 7
veranstaltungsdaten[, l+12] <- as.numeric(veranstaltungsdaten[, l+12])
attributes(veranstaltungsdaten)$variable.labels[l+12] <- "Bitte benoten Sie die Veranstaltung. "
veranstaltungsdaten[, l+12] <- factor(veranstaltungsdaten[, l+12], levels=c(1,2,3,4,5,6,7),labels=c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft", "Ungenügend", "keine Antwort"))
names(veranstaltungsdaten)[l+12] <- "q8"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+13] <- as.character(veranstaltungsdaten[, l+13])
attributes(veranstaltungsdaten)$variable.labels[l+13] <- "Haben Sie weiteres Feedback zu der Veranstaltung? Nutzen Sie bitte hierfür das Kommentarfeld."
names(veranstaltungsdaten)[l+13] <- "q8_comment"

# end of source file    
    
    #write(names(veranstaltungsdaten), file= "logger.csv", append = TRUE) 

    veranstaltungsname <- modul_veranstaltungen$Veranstaltung[v]
    veranstaltungsdozent <- modul_veranstaltungen$Dozent[v]
    out_sub = c(out_sub, knit_child('veranstaltungsanalyse.rnw'))
    
  }else if(modul_veranstaltungen$Praxis[v] == 1){
    
    start_veranstaltung <- fragen_modul + 
      (anzahl_v*fragen_veranstaltung) +
      (anzahl_p*fragen_praxis) + 
      (anzahl_s*fragen_statistik) + 
      (anzahl_pl*fragen_planspiel) + 
      (anzahl_e*fragen_ethik) + 
      (anzahl_w*fragen_werkstoffkunde) + 
      (anzahl_a*fragen_armothetik) + 
      (anzahl_prov*fragen_prothetikv) + 
      1
    
    ende_veranstaltung <- start_veranstaltung + fragen_praxis - 1
    
    #write(paste("select from studdaten: start: ", start_veranstaltung, "ende: ", ende_veranstaltung), file= "logger.csv", append = TRUE)
    
    #write("Praxis", file= "logger.csv", append = TRUE) 

    veranstaltungsdaten <- 
      studiengangsdaten[ , start_veranstaltung:ende_veranstaltung] 
    
    #write(paste("veranstaltungsdaten: ", dim(veranstaltungsdaten)), file= "logger.csv", append = TRUE) 
    #write(names(veranstaltungsdaten)[1], file= "logger.csv", append = TRUE) 
    
l <- 1
# LimeSurvey Field type: F
veranstaltungsdaten[, l] <- as.numeric(veranstaltungsdaten[, l])
attributes(veranstaltungsdaten)$variable.labels[l] <- "Für die Veranstaltung entsprach die kalkulierte Selbststudienzeit der Realität."
veranstaltungsdaten[, l] <- factor(veranstaltungsdaten[, l], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l] <- "q1_1"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+1] <- as.numeric(veranstaltungsdaten[, l+1])
attributes(veranstaltungsdaten)$variable.labels[l+1] <- "Für die Veranstaltung entsprach die kalkulierte Präsenzstudienzeit der Realität."
veranstaltungsdaten[, l+1] <- factor(veranstaltungsdaten[, l+1], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+1] <- "q1_2"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+2] <- as.numeric(veranstaltungsdaten[, l+2])
attributes(veranstaltungsdaten)$variable.labels[l+2] <- "Die Veranstaltung war gut strukturiert."
veranstaltungsdaten[, l+2] <- factor(veranstaltungsdaten[, l+2], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+2] <- "q1_3"

# LimeSurvey Field type: F
veranstaltungsdaten[, l+3] <- as.numeric(veranstaltungsdaten[, l+3])
attributes(veranstaltungsdaten)$variable.labels[l+3] <- "Die Veranstaltung wurde methodisch so durchgeführt, dass ich gut eigenständig arbeiten konnte."
veranstaltungsdaten[, l+3] <- factor(veranstaltungsdaten[, l+3], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+3] <- "q1_4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+4] <- as.numeric(veranstaltungsdaten[, l+4])
attributes(veranstaltungsdaten)$variable.labels[l+4] <- "Die Inhalte der Veranstaltung kann ich praktisch umsetzen."
veranstaltungsdaten[, l+4] <- factor(veranstaltungsdaten[, l+4], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+4] <- "q1_5"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+5] <- as.numeric(veranstaltungsdaten[, l+5])
attributes(veranstaltungsdaten)$variable.labels[l+5] <- "Der/die Lehrende war im Umgang mit den Studierenden freundlich."
veranstaltungsdaten[, l+5] <- factor(veranstaltungsdaten[, l+5], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+5] <- "q1_6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+6] <- as.numeric(veranstaltungsdaten[, l+6])
attributes(veranstaltungsdaten)$variable.labels[l+6] <- "Ich habe mich durch den/die Lehrende gut betreut gefühlt."
veranstaltungsdaten[, l+6] <- factor(veranstaltungsdaten[, l+6], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+6] <- "q1_7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+7] <- as.numeric(veranstaltungsdaten[, l+7])
attributes(veranstaltungsdaten)$variable.labels[l+7] <- "Der/die Lehrende war auch außerhalb der Lehrveranstaltung für Rückfragen gut erreichbar."
veranstaltungsdaten[, l+7] <- factor(veranstaltungsdaten[, l+7], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+7] <- "q1_8"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+8] <- as.numeric(veranstaltungsdaten[, l+8])
attributes(veranstaltungsdaten)$variable.labels[l+8] <- "Der/die Lehrende hat Fragen der Studierenden schnell und verständlich beantwortet."
veranstaltungsdaten[, l+8] <- factor(veranstaltungsdaten[, l+8], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+8] <- "q1_9"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+9] <- as.numeric(veranstaltungsdaten[, l+9])
attributes(veranstaltungsdaten)$variable.labels[l+9] <- "Der/die Dozenten hatten genug Zeit für individuelle Unterstützung bei der Fertigung."
veranstaltungsdaten[, l+9] <- factor(veranstaltungsdaten[, l+9], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+9] <- "q1_10"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+10] <- as.numeric(veranstaltungsdaten[, l+10])
attributes(veranstaltungsdaten)$variable.labels[l+10] <- "Die Wartezeiten an den Arbeitsflächen waren angemessen."
veranstaltungsdaten[, l+10] <- factor(veranstaltungsdaten[, l+10], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+10] <- "q1_11"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+11] <- as.numeric(veranstaltungsdaten[, l+11])
attributes(veranstaltungsdaten)$variable.labels[l+11] <- "Der Umfang der Arbeitszeit mit den Testpatienten war gut."
veranstaltungsdaten[, l+11] <- factor(veranstaltungsdaten[, l+11], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+11] <- "q1_12"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+12] <- as.numeric(veranstaltungsdaten[, l+12])
attributes(veranstaltungsdaten)$variable.labels[l+12] <- "Für die Veranstaltung war ich ausreichend mit Materialien versorgt."
veranstaltungsdaten[, l+12] <- factor(veranstaltungsdaten[, l+12], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+12] <- "q1_13"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+13] <- as.character(veranstaltungsdaten[, l+13])
attributes(veranstaltungsdaten)$variable.labels[l+13] <- "Bitte beschreiben Sie uns aus Ihrer Sicht das Problem bei der Materialversorgung. Wie könnte das Problem aus Ihrer Sicht gut behoben werden?"
names(veranstaltungsdaten)[l+13] <- "q2"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+14][is.na(veranstaltungsdaten[, l+14])] <- "A3"
veranstaltungsdaten[, l+14] <- as.character(veranstaltungsdaten[, l+14])
attributes(veranstaltungsdaten)$variable.labels[l+14] <- "Hatte die Veranstaltung für Sie einen eher theoretischen oder einen eher praktischen Bezug?"
veranstaltungsdaten[, l+14] <- factor(veranstaltungsdaten[, l+14], levels=c("A1","A2","A3"),labels=c("Theoriebezogen", "Praxisbezogen", "keine Antwort"))
names(veranstaltungsdaten)[l+14] <- "q3"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+15][is.na(veranstaltungsdaten[, l+15])] <- 3
veranstaltungsdaten[, l+15] <- as.numeric(veranstaltungsdaten[, l+15])
attributes(veranstaltungsdaten)$variable.labels[l+15] <- "War die Veranstaltung für Sie praxisrelevant?"
veranstaltungsdaten[, l+15] <- factor(veranstaltungsdaten[, l+15], levels=c(1,2,3),labels=c("Ja", "Nein", "keine Antwort"))
names(veranstaltungsdaten)[l+15] <- "q4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+16][is.na(veranstaltungsdaten[, l+16])] <- 7
veranstaltungsdaten[, l+16] <- as.numeric(veranstaltungsdaten[, l+16])
attributes(veranstaltungsdaten)$variable.labels[l+16] <- "Bitte benoten Sie die Veranstaltung."
veranstaltungsdaten[, l+16] <- factor(veranstaltungsdaten[, l+16], levels=c(1,2,3,4,5,6,7),labels=c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft", "Ungenügend", "keine Antwort"))
names(veranstaltungsdaten)[l+16] <- "q5"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+17] <- as.character(veranstaltungsdaten[, l+17])
attributes(veranstaltungsdaten)$variable.labels[l+17] <- "Haben Sie weiteres Feedback zu der Veranstaltung?"
names(veranstaltungsdaten)[l+17] <- "q5_comment"

    
    veranstaltungsname <- modul_veranstaltungen$Veranstaltung[v]
    veranstaltungsdozent <- modul_veranstaltungen$Dozent[v]
    
  out_sub = c(out_sub, knit_child('praxisanalyse.rnw'))
    
  }else if(modul_veranstaltungen$Praxis[v] == 2){
    
    start_veranstaltung <- fragen_modul + 
      (anzahl_v*fragen_veranstaltung) +
      (anzahl_p*fragen_praxis) + 
      (anzahl_s*fragen_statistik) + 
      (anzahl_pl*fragen_planspiel) + 
      (anzahl_e*fragen_ethik) + 
      (anzahl_w*fragen_werkstoffkunde) + 
      (anzahl_a*fragen_armothetik) + 
      (anzahl_prov*fragen_prothetikv) + 
      1
    
    ende_veranstaltung <- start_veranstaltung + 
      fragen_statistik - 1

    #write(paste("select from studdaten: start: ", start_veranstaltung, "ende: ", ende_veranstaltung), file= "logger.csv", append = TRUE) 
    veranstaltungsdaten <- studiengangsdaten[ , start_veranstaltung:ende_veranstaltung]
    #write("normale Veranstaltung", file= "logger.csv", append = TRUE) 
    #write(paste("veranstaltungsdaten: ", dim(veranstaltungsdaten)), file= "logger.csv", append = TRUE) 
    #write(names(veranstaltungsdaten)[1], file= "logger.csv", append = TRUE) 
    
# label_items_veranstaltungen
l <-1


veranstaltungsdaten[, l] <- as.numeric(veranstaltungsdaten[, l])
attributes(veranstaltungsdaten)$variable.labels[l] <- "Für die Veranstaltung entsprach die kalkulierte Selbststudienzeit der Realität."
veranstaltungsdaten[, l] <- factor(veranstaltungsdaten[, l], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l] <- "q5_1"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+1] <- as.numeric(veranstaltungsdaten[, l+1])
attributes(veranstaltungsdaten)$variable.labels[l+1] <- "Für die Veranstaltung entsprach die kalkulierte Präsenzstudienzeit der Realität."
veranstaltungsdaten[, l+1] <- factor(veranstaltungsdaten[, l+1], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+1] <- "q5_2"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+2] <- as.numeric(veranstaltungsdaten[, l+2])
attributes(veranstaltungsdaten)$variable.labels[l+2] <- "Die Veranstaltung war gut strukturiert."
veranstaltungsdaten[, l+2] <- factor(veranstaltungsdaten[, l+2], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+2] <- "q5_3"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+3] <- as.numeric(veranstaltungsdaten[, l+3])
attributes(veranstaltungsdaten)$variable.labels[l+3] <- "Die Veranstaltung wurde methodisch und didaktisch so durchgeführt, dass ich gut folgen konnte."
veranstaltungsdaten[, l+3] <- factor(veranstaltungsdaten[, l+3], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+3] <- "q5_4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+4] <- as.numeric(veranstaltungsdaten[, l+4])
attributes(veranstaltungsdaten)$variable.labels[l+4] <- "Die Veranstaltung vermittelte die Wissenschaftlichkeit des Faches angemessen."
veranstaltungsdaten[, l+4] <- factor(veranstaltungsdaten[, l+4], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+4] <- "q5_5"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+5] <- as.numeric(veranstaltungsdaten[, l+5])
attributes(veranstaltungsdaten)$variable.labels[l+5] <- "Die Inhalte der Veranstaltung kann ich praktisch umsetzen."
veranstaltungsdaten[, l+5] <- factor(veranstaltungsdaten[, l+5], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+5] <- "q5_6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+6] <- as.numeric(veranstaltungsdaten[, l+6])
attributes(veranstaltungsdaten)$variable.labels[l+6] <- "Der/die Lehrende war im Umgang mit den Studierenden freundlich."
veranstaltungsdaten[, l+6] <- factor(veranstaltungsdaten[, l+6], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+6] <- "q5_7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+7] <- as.numeric(veranstaltungsdaten[, l+7])
attributes(veranstaltungsdaten)$variable.labels[l+7] <- "Ich habe mich durch den/die Lehrende gut betreut gefühlt."
veranstaltungsdaten[, l+7] <- factor(veranstaltungsdaten[, l+7], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+7] <- "q5_8"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+8] <- as.numeric(veranstaltungsdaten[, l+8])
attributes(veranstaltungsdaten)$variable.labels[l+8] <- "Der/die Lehrende war auch außerhalb der Lehrveranstaltung für Rückfragen gut erreichbar."
veranstaltungsdaten[, l+8] <- factor(veranstaltungsdaten[, l+8], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+8] <- "q5_9"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+9] <- as.numeric(veranstaltungsdaten[, l+9])
attributes(veranstaltungsdaten)$variable.labels[l+9] <- "Der/die Lehrende hat Fragen der Studierenden schnell und verständlich beantwortet."
veranstaltungsdaten[, l+9] <- factor(veranstaltungsdaten[, l+9], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+9] <- "q5_10"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+10][is.na(veranstaltungsdaten[, l+10])] <- "A3"
veranstaltungsdaten[, l+10] <- as.character(veranstaltungsdaten[, l+10])
attributes(veranstaltungsdaten)$variable.labels[l+10] <- "Hatte die Veranstaltung für Sie einen eher theoretischen oder einen eher praktischen Bezug?"
veranstaltungsdaten[, l+10] <- factor(veranstaltungsdaten[, l+10], levels=c("A1","A2", "A3"),labels=c("Theoriebezogen", "Praxisbezogen", "keine Antwort"))
names(veranstaltungsdaten)[l+10] <- "q6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+11][is.na(veranstaltungsdaten[, l+11])] <- 3
veranstaltungsdaten[, l+11] <- as.numeric(veranstaltungsdaten[, l+11])
attributes(veranstaltungsdaten)$variable.labels[l+11] <- "War die Veranstaltung für Sie praxisrelevant?"
veranstaltungsdaten[, l+11] <- factor(veranstaltungsdaten[, l+11], levels=c(1,2,3),labels=c("Ja", "Nein", "keine Antwort"))
names(veranstaltungsdaten)[l+11] <- "q7"
# Benotungsfragen fehlen leider

# end of source file    
    
    #write(names(veranstaltungsdaten), file= "logger.csv", append = TRUE) 

    veranstaltungsname <- modul_veranstaltungen$Veranstaltung[v]
    veranstaltungsdozent <- modul_veranstaltungen$Dozent[v]
    out_sub = c(out_sub, knit_child('veranstaltungsanalysespecial.rnw'))
    
  }else  if(modul_veranstaltungen$Praxis[v] == 3){
    
    
    start_veranstaltung <- fragen_modul + 
      (anzahl_v*fragen_veranstaltung) +
      (anzahl_p*fragen_praxis) + 
      (anzahl_s*fragen_statistik) + 
      (anzahl_pl*fragen_planspiel) + 
      (anzahl_e*fragen_ethik) + 
      (anzahl_w*fragen_werkstoffkunde) + 
      (anzahl_a*fragen_armothetik) + 
      (anzahl_prov*fragen_prothetikv) + 
      1
    
    ende_veranstaltung <- start_veranstaltung + fragen_planspiel - 1
    
#    write(paste("select from studdaten: start: ", start_veranstaltung, "ende: ", ende_veranstaltung), file= "logger.csv", append = TRUE)
    
    #write("Praxis", file= "logger.csv", append = TRUE) 

    veranstaltungsdaten <- 
      studiengangsdaten[ , start_veranstaltung:ende_veranstaltung] 
    
    #write(paste("veranstaltungsdaten: ", dim(veranstaltungsdaten)), file= "logger.csv", append = TRUE) 
    #write(names(veranstaltungsdaten)[1], file= "logger.csv", append = TRUE) 
    
l <- 1
# LimeSurvey Field type: F
#write(paste("veranstaltungsdaten Planspiel vorher: ", veranstaltungsdaten[, l]), file= "logger.csv", append = TRUE)
# write(paste("Label: ", names(veranstaltungsdaten[l])), file= "logger.csv", append = TRUE)

veranstaltungsdaten[, l] <- as.numeric(veranstaltungsdaten[, l])
attributes(veranstaltungsdaten)$variable.labels[l] <- "Für die Veranstaltung entsprach die kalkulierte Selbststudienzeit der Realität."
veranstaltungsdaten[, l] <- factor(veranstaltungsdaten[, l], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l] <- "q1_1"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+1] <- as.numeric(veranstaltungsdaten[, l+1])
attributes(veranstaltungsdaten)$variable.labels[l+1] <- "Für die Veranstaltung entsprach die kalkulierte Präsenzstudienzeit der Realität."
veranstaltungsdaten[, l+1] <- factor(veranstaltungsdaten[, l+1], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+1] <- "q1_2"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+2] <- as.numeric(veranstaltungsdaten[, l+2])
attributes(veranstaltungsdaten)$variable.labels[l+2] <- "Die Veranstaltung war gut strukturiert."
veranstaltungsdaten[, l+2] <- factor(veranstaltungsdaten[, l+2], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+2] <- "q1_3"

# LimeSurvey Field type: F
veranstaltungsdaten[, l+3] <- as.numeric(veranstaltungsdaten[, l+3])
attributes(veranstaltungsdaten)$variable.labels[l+3] <- "Die Veranstaltung wurde methodisch so durchgeführt, dass ich gut eigenständig arbeiten konnte."
veranstaltungsdaten[, l+3] <- factor(veranstaltungsdaten[, l+3], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+3] <- "q1_4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+4] <- as.numeric(veranstaltungsdaten[, l+4])
attributes(veranstaltungsdaten)$variable.labels[l+4] <- "Die Inhalte der Veranstaltung kann ich praktisch umsetzen."
veranstaltungsdaten[, l+4] <- factor(veranstaltungsdaten[, l+4], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+4] <- "q1_5"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+5] <- as.numeric(veranstaltungsdaten[, l+5])
attributes(veranstaltungsdaten)$variable.labels[l+5] <- "Der/die Lehrende war im Umgang mit den Studierenden freundlich."
veranstaltungsdaten[, l+5] <- factor(veranstaltungsdaten[, l+5], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+5] <- "q1_6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+6] <- as.numeric(veranstaltungsdaten[, l+6])
attributes(veranstaltungsdaten)$variable.labels[l+6] <- "Ich habe mich durch den/die Lehrende gut betreut gefühlt."
veranstaltungsdaten[, l+6] <- factor(veranstaltungsdaten[, l+6], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+6] <- "q1_7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+7] <- as.numeric(veranstaltungsdaten[, l+7])
attributes(veranstaltungsdaten)$variable.labels[l+7] <- "Der/die Lehrende war auch außerhalb der Lehrveranstaltung für Rückfragen gut erreichbar."
veranstaltungsdaten[, l+7] <- factor(veranstaltungsdaten[, l+7], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+7] <- "q1_8"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+8] <- as.numeric(veranstaltungsdaten[, l+8])
attributes(veranstaltungsdaten)$variable.labels[l+8] <- "Der/die Lehrende hat Fragen der Studierenden schnell und verständlich beantwortet."
veranstaltungsdaten[, l+8] <- factor(veranstaltungsdaten[, l+8], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+8] <- "q1_9"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+9] <- as.numeric(veranstaltungsdaten[, l+9])
attributes(veranstaltungsdaten)$variable.labels[l+9] <- "Der/die Dozenten hatten genug Zeit für individuelle Unterstützung bei der Fertigung."
veranstaltungsdaten[, l+9] <- factor(veranstaltungsdaten[, l+9], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+9] <- "q1_10"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+10] <- as.numeric(veranstaltungsdaten[, l+10])
attributes(veranstaltungsdaten)$variable.labels[l+10] <- "Die Wartezeiten an den Arbeitsflächen waren angemessen."
veranstaltungsdaten[, l+10] <- factor(veranstaltungsdaten[, l+10], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+10] <- "q1_11"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+11] <- as.numeric(veranstaltungsdaten[, l+11])
attributes(veranstaltungsdaten)$variable.labels[l+11] <- "Der Umfang der Arbeitszeit mit den Testpatienten war gut."
veranstaltungsdaten[, l+11] <- factor(veranstaltungsdaten[, l+11], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+11] <- "q1_12"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+12] <- as.numeric(veranstaltungsdaten[, l+12])
attributes(veranstaltungsdaten)$variable.labels[l+12] <- "Für die Veranstaltung war ich ausreichend mit Materialien versorgt."
veranstaltungsdaten[, l+12] <- factor(veranstaltungsdaten[, l+12], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+12] <- "q1_13"

# Frage zu Material entfällt

# LimeSurvey Field type: A

veranstaltungsdaten[, l+13][is.na(veranstaltungsdaten[, l+13])] <- "A3"
veranstaltungsdaten[, l+13] <- as.character(veranstaltungsdaten[, l+13])
attributes(veranstaltungsdaten)$variable.labels[l+13] <- "Hatte die Veranstaltung für Sie einen eher theoretischen oder einen eher praktischen Bezug?"
veranstaltungsdaten[, l+13] <- factor(veranstaltungsdaten[, l+13], levels=c("A1","A2","A3"),labels=c("Theoriebezogen", "Praxisbezogen", "keine Antwort"))
names(veranstaltungsdaten)[l+13] <- "q3"

# write(paste("veranstaltungsdaten Planspiel: ", veranstaltungsdaten$q3), file= "logger.csv", append = TRUE)

# LimeSurvey Field type: F
veranstaltungsdaten[, l+14][is.na(veranstaltungsdaten[, l+14])] <- 3
veranstaltungsdaten[, l+14] <- as.numeric(veranstaltungsdaten[, l+14])
attributes(veranstaltungsdaten)$variable.labels[l+14] <- "War die Veranstaltung für Sie praxisrelevant?"
veranstaltungsdaten[, l+14] <- factor(veranstaltungsdaten[, l+14], levels=c(1,2,3),labels=c("Ja", "Nein", "keine Antwort"))
names(veranstaltungsdaten)[l+14] <- "q4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+15][is.na(veranstaltungsdaten[, l+15])] <- 7
veranstaltungsdaten[, l+15] <- as.numeric(veranstaltungsdaten[, l+15])
attributes(veranstaltungsdaten)$variable.labels[l+15] <- "Bitte benoten Sie die Veranstaltung."
veranstaltungsdaten[, l+15] <- factor(veranstaltungsdaten[, l+15], levels=c(1,2,3,4,5,6,7),labels=c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft", "Ungenügend", "keine Antwort"))
names(veranstaltungsdaten)[l+15] <- "q5"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+16] <- as.character(veranstaltungsdaten[, l+16])
attributes(veranstaltungsdaten)$variable.labels[l+16] <- "Haben Sie weiteres Feedback zu der Veranstaltung?"
names(veranstaltungsdaten)[l+16] <- "q5_comment"

    
    veranstaltungsname <- modul_veranstaltungen$Veranstaltung[v]
    veranstaltungsdozent <- modul_veranstaltungen$Dozent[v]
    
  out_sub = c(out_sub, knit_child('planspielanalyse.rnw'))    
    
  }else if(modul_veranstaltungen$Praxis[v] == 6 | modul_veranstaltungen$Praxis[v] == 7){
    start_veranstaltung <- fragen_modul + 
      (anzahl_v*fragen_veranstaltung) +
      (anzahl_p*fragen_praxis) + 
      (anzahl_s*fragen_statistik) + 
      (anzahl_pl*fragen_planspiel) + 
      (anzahl_e*fragen_ethik) + 
      (anzahl_w*fragen_werkstoffkunde) + 
      (anzahl_a*fragen_armothetik) + 
      (anzahl_prov*fragen_prothetikv) + 
      1
    ende_veranstaltung <- start_veranstaltung + 
      fragen_armothetik - 1

    #write(paste("select from studdaten: start: ", start_veranstaltung, "ende: ", ende_veranstaltung), file= "logger.csv", append = TRUE) 
    veranstaltungsdaten <- studiengangsdaten[ , start_veranstaltung:ende_veranstaltung]
    #write("normale Veranstaltung", file= "logger.csv", append = TRUE) 
    #write(paste("veranstaltungsdaten: ", dim(veranstaltungsdaten)), file= "logger.csv", append = TRUE) 
    #write(names(veranstaltungsdaten)[1], file= "logger.csv", append = TRUE) 
    
# label_items_veranstaltungen
l <-1


veranstaltungsdaten[, l] <- as.numeric(veranstaltungsdaten[, l])
attributes(veranstaltungsdaten)$variable.labels[l] <- "Für die Veranstaltung entsprach die kalkulierte Selbststudienzeit der Realität."
veranstaltungsdaten[, l] <- factor(veranstaltungsdaten[, l], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l] <- "q5_1"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+1] <- as.numeric(veranstaltungsdaten[, l+1])
attributes(veranstaltungsdaten)$variable.labels[l+1] <- "Für die Veranstaltung entsprach die kalkulierte Präsenzstudienzeit der Realität."
veranstaltungsdaten[, l+1] <- factor(veranstaltungsdaten[, l+1], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+1] <- "q5_2"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+2] <- as.numeric(veranstaltungsdaten[, l+2])
attributes(veranstaltungsdaten)$variable.labels[l+2] <- "Die Veranstaltung war gut strukturiert."
veranstaltungsdaten[, l+2] <- factor(veranstaltungsdaten[, l+2], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+2] <- "q5_3"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+3] <- as.numeric(veranstaltungsdaten[, l+3])
attributes(veranstaltungsdaten)$variable.labels[l+3] <- "Die Veranstaltung wurde methodisch und didaktisch so durchgeführt, dass ich gut folgen konnte."
veranstaltungsdaten[, l+3] <- factor(veranstaltungsdaten[, l+3], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+3] <- "q5_4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+4] <- as.numeric(veranstaltungsdaten[, l+4])
attributes(veranstaltungsdaten)$variable.labels[l+4] <- "Die Veranstaltung vermittelte die Wissenschaftlichkeit des Faches angemessen."
veranstaltungsdaten[, l+4] <- factor(veranstaltungsdaten[, l+4], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+4] <- "q5_5"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+5] <- as.numeric(veranstaltungsdaten[, l+5])
attributes(veranstaltungsdaten)$variable.labels[l+5] <- "Die Inhalte der Veranstaltung kann ich praktisch umsetzen."
veranstaltungsdaten[, l+5] <- factor(veranstaltungsdaten[, l+5], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+5] <- "q5_6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+6] <- as.numeric(veranstaltungsdaten[, l+6])
attributes(veranstaltungsdaten)$variable.labels[l+6] <- "Der/die Lehrende war im Umgang mit den Studierenden freundlich."
veranstaltungsdaten[, l+6] <- factor(veranstaltungsdaten[, l+6], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+6] <- "q5_7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+7] <- as.numeric(veranstaltungsdaten[, l+7])
attributes(veranstaltungsdaten)$variable.labels[l+7] <- "Ich habe mich durch den/die Lehrende gut betreut gefühlt."
veranstaltungsdaten[, l+7] <- factor(veranstaltungsdaten[, l+7], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+7] <- "q5_8"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+8] <- as.numeric(veranstaltungsdaten[, l+8])
attributes(veranstaltungsdaten)$variable.labels[l+8] <- "Der/die Lehrende war auch außerhalb der Lehrveranstaltung für Rückfragen gut erreichbar."
veranstaltungsdaten[, l+8] <- factor(veranstaltungsdaten[, l+8], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+8] <- "q5_9"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+9] <- as.numeric(veranstaltungsdaten[, l+9])
attributes(veranstaltungsdaten)$variable.labels[l+9] <- "Der/die Lehrende hat Fragen der Studierenden schnell und verständlich beantwortet."
veranstaltungsdaten[, l+9] <- factor(veranstaltungsdaten[, l+9], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+9] <- "q5_10"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+10][is.na(veranstaltungsdaten[, l+10])] <- "A3"
veranstaltungsdaten[, l+10] <- as.character(veranstaltungsdaten[, l+10])
attributes(veranstaltungsdaten)$variable.labels[l+10] <- "Hatte die Veranstaltung für Sie einen eher theoretischen oder einen eher praktischen Bezug?"
veranstaltungsdaten[, l+10] <- factor(veranstaltungsdaten[, l+10], levels=c("A1","A2", "A3"),labels=c("Theoriebezogen", "Praxisbezogen", "keine Antwort"))
names(veranstaltungsdaten)[l+10] <- "q6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+11][is.na(veranstaltungsdaten[, l+11])] <- 3
veranstaltungsdaten[, l+11] <- as.numeric(veranstaltungsdaten[, l+11])
attributes(veranstaltungsdaten)$variable.labels[l+11] <- "War die Veranstaltung für Sie praxisrelevant?"
veranstaltungsdaten[, l+11] <- factor(veranstaltungsdaten[, l+11], levels=c(1,2,3),labels=c("Ja", "Nein", "keine Antwort"))
names(veranstaltungsdaten)[l+11] <- "q7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+13][is.na(veranstaltungsdaten[, l+13])] <- 7
veranstaltungsdaten[, l+13] <- as.numeric(veranstaltungsdaten[, l+13])
attributes(veranstaltungsdaten)$variable.labels[l+13] <- "Bitte benoten Sie die Veranstaltung. "
veranstaltungsdaten[, l+13] <- factor(veranstaltungsdaten[, l+13], levels=c(1,2,3,4,5,6,7),labels=c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft", "Ungenügend", "keine Antwort"))
names(veranstaltungsdaten)[l+13] <- "q8"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+14] <- as.character(veranstaltungsdaten[, l+14])
attributes(veranstaltungsdaten)$variable.labels[l+14] <- "Haben Sie weiteres Feedback zu der Veranstaltung? Nutzen Sie bitte hierfür das Kommentarfeld."
names(veranstaltungsdaten)[l+14] <- "q8_comment"

# end of source file    
    
    #write(names(veranstaltungsdaten), file= "logger.csv", append = TRUE) 

    veranstaltungsname <- modul_veranstaltungen$Veranstaltung[v]
    veranstaltungsdozent <- modul_veranstaltungen$Dozent[v]
    out_sub = c(out_sub, knit_child('veranstaltungsanalyse.rnw'))
    
  
  }else{
    
    start_veranstaltung <- fragen_modul + 
      (anzahl_v*fragen_veranstaltung) +
      (anzahl_p*fragen_praxis) + 
      (anzahl_s*fragen_statistik) + 
      (anzahl_pl*fragen_planspiel) + 
      (anzahl_e*fragen_ethik) + 
      (anzahl_w*fragen_werkstoffkunde) + 
      (anzahl_a*fragen_armothetik) + 
      (anzahl_prov*fragen_prothetikv) + 
     1
    
    ende_veranstaltung <- start_veranstaltung + fragen_ethik - 1
    
    #write(paste("select from studdaten: start: ", start_veranstaltung, "ende: ", ende_veranstaltung), file= "logger.csv", append = TRUE)
    
    #write("Praxis", file= "logger.csv", append = TRUE) 

    veranstaltungsdaten <- 
      studiengangsdaten[ , start_veranstaltung:ende_veranstaltung] 
    
    #write(paste("veranstaltungsdaten: ", dim(veranstaltungsdaten)), file= "logger.csv", append = TRUE) 
    #write(names(veranstaltungsdaten)[1], file= "logger.csv", append = TRUE) 
    
l <- 1
# LimeSurvey Field type: F
veranstaltungsdaten[, l] <- as.numeric(veranstaltungsdaten[, l])
attributes(veranstaltungsdaten)$variable.labels[l] <- "Für die Veranstaltung entsprach die kalkulierte Selbststudienzeit der Realität."
veranstaltungsdaten[, l] <- factor(veranstaltungsdaten[, l], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l] <- "q1_1"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+1] <- as.numeric(veranstaltungsdaten[, l+1])
attributes(veranstaltungsdaten)$variable.labels[l+1] <- "Für die Veranstaltung entsprach die kalkulierte Präsenzstudienzeit der Realität."
veranstaltungsdaten[, l+1] <- factor(veranstaltungsdaten[, l+1], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+1] <- "q1_2"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+2] <- as.numeric(veranstaltungsdaten[, l+2])
attributes(veranstaltungsdaten)$variable.labels[l+2] <- "Die Veranstaltung war gut strukturiert."
veranstaltungsdaten[, l+2] <- factor(veranstaltungsdaten[, l+2], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+2] <- "q1_3"

# LimeSurvey Field type: F
veranstaltungsdaten[, l+3] <- as.numeric(veranstaltungsdaten[, l+3])
attributes(veranstaltungsdaten)$variable.labels[l+3] <- "Die Veranstaltung wurde methodisch so durchgeführt, dass ich gut eigenständig arbeiten konnte."
veranstaltungsdaten[, l+3] <- factor(veranstaltungsdaten[, l+3], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+3] <- "q1_4"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+4] <- as.numeric(veranstaltungsdaten[, l+4])
attributes(veranstaltungsdaten)$variable.labels[l+4] <- "Die Inhalte der Veranstaltung kann ich praktisch umsetzen."
veranstaltungsdaten[, l+4] <- factor(veranstaltungsdaten[, l+4], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+4] <- "q1_5"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+5] <- as.numeric(veranstaltungsdaten[, l+5])
attributes(veranstaltungsdaten)$variable.labels[l+5] <- "Der/die Lehrende war im Umgang mit den Studierenden freundlich."
veranstaltungsdaten[, l+5] <- factor(veranstaltungsdaten[, l+5], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+5] <- "q1_6"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+6] <- as.numeric(veranstaltungsdaten[, l+6])
attributes(veranstaltungsdaten)$variable.labels[l+6] <- "Ich habe mich durch den/die Lehrende gut betreut gefühlt."
veranstaltungsdaten[, l+6] <- factor(veranstaltungsdaten[, l+6], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+6] <- "q1_7"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+7] <- as.numeric(veranstaltungsdaten[, l+7])
attributes(veranstaltungsdaten)$variable.labels[l+7] <- "Der/die Lehrende war auch außerhalb der Lehrveranstaltung für Rückfragen gut erreichbar."
veranstaltungsdaten[, l+7] <- factor(veranstaltungsdaten[, l+7], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+7] <- "q1_8"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+8] <- as.numeric(veranstaltungsdaten[, l+8])
attributes(veranstaltungsdaten)$variable.labels[l+8] <- "Der/die Lehrende hat Fragen der Studierenden schnell und verständlich beantwortet."
veranstaltungsdaten[, l+8] <- factor(veranstaltungsdaten[, l+8], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+8] <- "q1_9"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+9] <- as.numeric(veranstaltungsdaten[, l+9])
attributes(veranstaltungsdaten)$variable.labels[l+9] <- "Der/die Dozenten hatten genug Zeit für individuelle Unterstützung bei der Fertigung."
veranstaltungsdaten[, l+9] <- factor(veranstaltungsdaten[, l+9], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+9] <- "q1_10"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+10] <- as.numeric(veranstaltungsdaten[, l+10])
attributes(veranstaltungsdaten)$variable.labels[l+10] <- "Die Wartezeiten an den Arbeitsflächen waren angemessen."
veranstaltungsdaten[, l+10] <- factor(veranstaltungsdaten[, l+10], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+10] <- "q1_11"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+11] <- as.numeric(veranstaltungsdaten[, l+11])
attributes(veranstaltungsdaten)$variable.labels[l+11] <- "Der Umfang der Arbeitszeit mit den Testpatienten war gut."
veranstaltungsdaten[, l+11] <- factor(veranstaltungsdaten[, l+11], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+11] <- "q1_12"
# LimeSurvey Field type: F
veranstaltungsdaten[, l+12] <- as.numeric(veranstaltungsdaten[, l+12])
attributes(veranstaltungsdaten)$variable.labels[l+12] <- "Für die Veranstaltung war ich ausreichend mit Materialien versorgt."
veranstaltungsdaten[, l+12] <- factor(veranstaltungsdaten[, l+12], levels=c(1,2,3,4,5),labels=c("Stimme deutlich zu.", "Stimme zu.", "Bin unentschieden.", "Stimme nicht zu.", "Stimme nachdrücklich nicht zu."))
names(veranstaltungsdaten)[l+12] <- "q1_13"

# LimeSurvey Field type: F
veranstaltungsdaten[, l+13][is.na(veranstaltungsdaten[, l+13])] <- 7
veranstaltungsdaten[, l+13] <- as.numeric(veranstaltungsdaten[, l+13])
attributes(veranstaltungsdaten)$variable.labels[l+13] <- "Bitte benoten Sie die Veranstaltung."
veranstaltungsdaten[, l+13] <- factor(veranstaltungsdaten[, l+13], levels=c(1,2,3,4,5,6,7),labels=c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft", "Ungenügend", "keine Antwort"))
names(veranstaltungsdaten)[l+13] <- "q5"
# LimeSurvey Field type: A
veranstaltungsdaten[, l+14] <- as.character(veranstaltungsdaten[, l+14])
attributes(veranstaltungsdaten)$variable.labels[l+14] <- "Haben Sie weiteres Feedback zu der Veranstaltung?"
names(veranstaltungsdaten)[l+14] <- "q5_comment"

    
    veranstaltungsname <- modul_veranstaltungen$Veranstaltung[v]
    veranstaltungsdozent <- modul_veranstaltungen$Dozent[v]
    
  out_sub = c(out_sub, knit_child('ethikanalyse.rnw'))
    
    
    
    
  }
  
  # source("label_items_veranstaltung.r")
  # write.csv(head(veranstaltungsdaten), file = "logger.csv")
  
}

@

\Sexpr{paste(out_sub, collapse = '\n ')}
